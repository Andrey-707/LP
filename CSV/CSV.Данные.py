# CSV.Данные
# Формат CSV (от англ. Comma-Separated Values — значения, разделённые запятыми) предназначен
# для хранения табличных данных. В этом формате каждая строка таблицы соответствует строке
# текста, которая содержит одно или несколько полей, разделенных запятыми, а проблема
# запятых, как части значений, решается с помощью кавычек. 
import csv

from rich import print


print("[bold magenta]Program start[/]")

# Это строчка с получением итератора. В переменную rows будет записан итератор,
# с помощью которого можно «пробежаться» циклом по файлу.
with open("addresses.csv") as f:
    rows = csv.reader(f)
    for row in rows:
        print(row)

# Вывод:
'''
['Иван Иванов', 'Минск', 'Партизанский проспект 1-8']
['Сидор Сидоров', 'Москва', 'Улица Танкистов 2-12']
['Петр Петров', 'Киев', 'Бетонный проезд 10-1']
'''

# В этой программе, например, используется распаковка
with open("addresses.csv") as f:
    rows = csv.reader(f)
    for name, city, address in rows:
        print(name, city, address)

# Вывод:
'''
Иван Иванов Минск Партизанский проспект 1-8
Сидор Сидоров Москва Улица Танкистов 2-12
Петр Петров Киев Бетонный проезд 10-1
'''

# Записать информацию в файл с помощью модуля csv
with open("addresses2.csv", "w", newline="") as f: # newline="" выключает создание пустой строки
    # получаем объект для записи в файл
    writer = csv.writer(f)
    row = ["Борис Абрамов", "Минск", "ул. Толстого 2/10"]
    # и с его помощью записываем информацию в файл
    writer.writerow(row)

# открыть файл на чтение распаковкой.
# Открытие выбросит исключение ValueError, если при создании файла не прописать newline=""
# ValueError: not enough values to unpack (expected 3, got 0)
with open("addresses2.csv") as f:
    rows = csv.reader(f)
    for name, city, address in rows:
        print(name, city, address)

# # открыть файл на чтение в виде списка
# with open("addresses2.csv") as f:
#     rows = csv.reader(f)
#     for row in rows:
#         print(row)

# Вывод:
'''
Борис Абрамов Минск ул. Толстого 2/10
'''

# Записать информацию в файл с помощью модуля csv. Опять же записывает пустые списки.
with open("addresses2.csv", "w", newline="") as f: # newline="" выключает создание пустой строки
    writer = csv.writer(f)
    rows = [["Борис Абрамов", "Минск, Беларусь", "ул. Толстого 2/10"],
        ["Виталий Тарасов", "Минск", "сквер 'Мотовело' 42"]]
    # можно использовать и метод writerows, чтобы записать сразу несколько строк
    writer.writerows(rows)

# открыть файл на чтение распаковкой.
with open("addresses2.csv") as f:
    rows = csv.reader(f)
    for name, city, address in rows:
        print(name, city, address)

# # открыть файл на чтение в виде списка
# with open("addresses2.csv") as f:
#     rows = csv.reader(f)
#     for row in rows:
#         print(row)

# Вывод:
'''
Борис Абрамов Минск, Беларусь ул. Толстого 2/10
Виталий Тарасов Минск сквер 'Мотовело' 42
'''

print("[bold magenta]Program finish[/]")


# Вывод если данные сохранены НЕ ПРАВИЛЬНО (при создании не прописано newline=""):
'''
['Борис Абрамов', 'Минск', 'ул. Толстого 2/10']
[]
['Борис Абрамов', 'Минск, Беларусь', 'ул. Толстого 2/10']
[]
['Виталий Тарасов', 'Минск', "сквер 'Мотовело' 42"]
[]
'''